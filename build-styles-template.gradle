plugins {
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = 8
targetCompatibility = 8

def today = LocalDate.now()
def month = today.getMonthValue()
def year = today.getYear() - 2000

def isRelease = Boolean.parseBoolean(System.getenv("RELEASE"))

group = 'org.citationstyles'
version = "$year.$month"
if (!isRelease) {
    version += "-SNAPSHOT"
}

def addContributor(contributor, contributors) {
    def name = contributor.name.text().trim()
    def email = contributor.email.text().trim()
    def uri = contributor.uri.text().trim()
    if (contributors.containsKey(name)) {
        if (contributors[name].email.isEmpty() && !email.isEmpty()) {
            contributors[name].email = email
        }
        if (contributors[name].url.isEmpty() && !uri.isEmpty()) {
            contributors[name].url = uri
        }
    } else {
        contributors[name] = [
            name: name,
            email: email,
            url: uri
        ]
    }
}

def makeContributors() {
    def contributorsmap = [:]

    def files = jar.inputs.files.files
    for (file in files) {
        if (!file.name.toLowerCase().endsWith('.csl')) {
            continue
        }

        def csl = new XmlSlurper().parse(file)
        def cslauthors = csl.info.author
        def cslcontributors = csl.info.contributor
        for (author in cslauthors) {
            addContributor(author, contributorsmap)
        }
        for (contributor in cslcontributors) {
            addContributor(contributor, contributorsmap)
        }
    }

    return contributorsmap.values().sort { a, b ->
      return a.name.toLowerCase().compareTo(b.name.toLowerCase())
    }
}

jar {
    // include styles
    from fileTree(dir: '.', includes: [ '*.csl', 'dependent/*.csl' ])
}

def contributorsList = makeContributors()

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Citation Style Language (CSL) citation styles'
                packaging = 'jar'
                description = 'Citation Style Language (CSL) citation styles packaged as a Maven artifact'
                url = 'https://citationstyles.org/'

                scm {
                    url = 'https://github.com/citation-style-language/styles'
                    connection = 'scm:git:git://github.com/citation-style-language/styles.git'
                    developerConnection = 'scm:git:git://github.com/citation-style-language/styles.git'
                }

                licenses {
                    license {
                        name = 'Creative Commons Attribution-ShareAlike 3.0 Unported license'
                        url = 'https://creativecommons.org/licenses/by-sa/3.0/'
                        distribution = 'repo'
                        comments = '''\
                            All the styles in this repository are released under the Creative
                            Commons Attribution-ShareAlike 3.0 Unported license. For attribution,
                            any software using CSL styles from this repository must include a clear
                            mention of the CSL project and a link to CitationStyles.org. When
                            distributing these styles, the listings of authors and contributors in
                            the style metadata must be kept as is.'''.stripIndent()
                    }
                }

                organization {
                    name = 'CitationStyles.org'
                    url = 'https://citationstyles.org/'
                }
 
                developers {
                    developer {
                        id = 'michel-kraemer'
                        name = 'Michel Kraemer'
                        email = 'michel@undercouch.de'
                        url = 'https://michelkraemer.com'
                    }
                }

                contributors {
                    for (c in contributorsList) {
                        contributor {
                            name = c.name
                            if (!c.email.isEmpty()) email = c.email
                            if (!c.url.isEmpty()) url = c.url
                        }
                    }
                }
            }
        }
    }
}

// sign all artifacts
signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    // only sign release artifacts and not snapshots
    onlyIf { isRelease }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}
