import org.gradle.util.VersionNumber

def sonatypeRepoUrl = 'https://oss.sonatype.org/content/groups/public'

repositories {
    maven {
        url sonatypeRepoUrl
    }
}

configurations {
    styles
    locales
}

def localesMetadataUrl = "$sonatypeRepoUrl/org/citationstyles/locales/maven-metadata.xml"
def stylesMetadataUrl = "$sonatypeRepoUrl/org/citationstyles/styles/maven-metadata.xml"

def getLatestSnapshot(url) {
    def metadata = new XmlSlurper().parseText(new URL(url).text)
    def snapshots = metadata.versioning.versions.'*'.findAll { it.text().endsWith("-SNAPSHOT") }
    def snapshotVersions = snapshots.collect { [VersionNumber.parse(it.text()), it.text()] }
    def latest = snapshotVersions.sort { a, b-> b[0] <=> a[0] }[0]
    return latest[1]
}

// get lastest snapshot versions
def latestStylesSnapshot = getLatestSnapshot(stylesMetadataUrl)
def latestLocalesSnapshot = getLatestSnapshot(localesMetadataUrl)

dependencies {
    styles "org.citationstyles:styles:$latestStylesSnapshot"
    locales "org.citationstyles:locales:$latestLocalesSnapshot"
}

configurations.all {
    // always download snapshots
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

task extractStyles(type: Sync) {
    dependsOn configurations.styles
    from {
        configurations.styles.collect { zipTree(it) }
    }
    into "$buildDir/styles/"
}

task extractLocales(type: Sync) {
    dependsOn configurations.locales
    from {
        configurations.locales.collect { zipTree(it) }
    }
    into "$buildDir/locales/"
}

task extractAll(dependsOn: [extractStyles, extractLocales])

defaultTasks 'extractAll'
